// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String?
  createdAt DateTime  @default(now())
  workLogs  workLog[]
  clocks    clock[]
  requestedLeaves LeaveRequest[] @relation("Requester")
  agentLeaves     LeaveRequest[] @relation("Agent")
}

model clock {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  type      clockType
  timestamp DateTime  @default(now())
}

enum clockType {
  IN
  OUT
}

model workLog {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  startTime   DateTime
  endTime     DateTime?
  projectCode String
  projectName String
  category    String
  content     String
}

model LeaveRequest {
  id          String    @id @default(cuid())
  requesterId String
  requester   User      @relation("Requester", fields: [requesterId], references: [id])
  agentId     String
  agent       User      @relation("Agent", fields: [agentId], references: [id])
  status      LeaveStatus @default(PENDING_AGENT)
  reason      String
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum LeaveStatus {
  PENDING_AGENT
  PENDING_ADMIN
  APPROVED
  REJECTED
}